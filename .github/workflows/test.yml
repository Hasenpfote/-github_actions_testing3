name: Test

#on: [ push, pull_request ]
on: workflow_dispatch

permissions:
  contents: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8']
        #os: [ubuntu-20.04, macos-latest, windows-latest]
        os: [ubuntu-20.04, macos-latest]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load cached Poetry installation
      id: cached-poetry
      uses: actions/cache@v3
      with:
        path: ~/.local  # the path depends on the OS
        key: poetry-${{ matrix.os }}
    - name: Install Poetry
      if: steps.cached-poetry.outputs.cache-hit != 'true'
      uses: snok/install-poetry@v1
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.in-project true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --only dev
    - name: Install project
      run: poetry install --no-interaction --only-root
    - name: Test with pytest
      run: poetry run tox -e py # This is not possible on Windows.
