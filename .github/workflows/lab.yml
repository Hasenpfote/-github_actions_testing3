name: Lab

on: workflow_dispatch

permissions:
  contents: read

jobs:
  build:
    defaults:
      run:
        shell: bash
    #[ubuntu-20.04, macos-latest, windows-latest]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read version
        id: python-version
        uses: juliangruber/read-file-action@v1
        with:
          path: .github/python-version.txt
          trim: true
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ steps.python-version.outputs.content }}
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local # the path depends on the OS
          key: lab-poetry-${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
      - name: Echo PATH
        run: | 
          #export PATH="$HOME/.local/bin:$PATH"
          echo '$HOME/.local/bin:$PATH' >> $GITHUB_PATH
          echo $PATH
      - name: Echo POETRY_HOME
        run: | 
          echo $POETRY_HOME
      - name: Echo
        run: | 
          poetry --version
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: lab-venv-${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --only dev
      - name: Install project
        run: poetry install --no-interaction --only-root
      - name: Lint with tox
        run: |
          poetry --version
