name: Lint

#on: [ push, pull_request ]
on: workflow_dispatch

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: vars
        run: echo 'python-version=$(cat .github/python-version.txt)' >> $GITHUB_OUTPUT
      #- name: Output version
      #  run: echo ${{ steps.vars.outputs.python-version }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ steps.vars.outputs.python-version }}

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local # the path depends on the OS
          key: poetry-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --only dev
      - name: Install project
        run: poetry install --no-interaction --only-root
      - name: Lint with tox
        run: |
          poetry run tox -e black,isort,flake8,mypy -p all -q
