name: Lint

#on: [ push, pull_request ]
on: workflow_dispatch

permissions:
  contents: read

jobs:
  env_prep:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-env.outputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read JSON file
        id: set-env
        shell: bash
        run: |
          JSON=$(cat .github/workflows/env.json)
          echo 'env<<EOF' >> $GITHUB_OUTPUT
          echo "${JSON}" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  build:
    needs: env_prep
    env: ${{ fromJson(needs.env_prep.outputs.env) }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}

      - name: Set up Poetry ${{ env.poetry_version }}
        id: setup-poetry
        uses: ./.github/actions/setup-poetry
        with:
          cache-path: ${{ env.poetry_cache_paths }}
          cache-key: ${{ format(env.poetry_cache_key_fmt, env.poetry_version, runner.os, steps.setup-python.outputs.python-version) }}
          poetry-version: ${{ env.poetry_version }}
          poetry-home: ${{ env.poetry_home }}
          poetry-path: ${{ env.poetry_path }}

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Set up Poetry dependencies
        id: setup-poetry-dependencies
        uses: ./.github/actions/setup-poetry-dependencies
        with:
          cache-path: .venv
          cache-key: ${{ format(env.venv_cache_key_fmt, runner.os, steps.setup-python.outputs.python-version, hashFiles('**/poetry.lock')) }}
          python-version: ${{ env.python-version }}
          poetry-install-args: --no-interaction --only dev

      #- name: Install project
      #  run: poetry install --no-interaction --only-root

      - name: Lint with tox
        run: |
          poetry run tox -e black,isort,flake8,mypy -p all -q
