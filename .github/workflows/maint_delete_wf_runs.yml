name: ðŸš§ðŸ§° Maint - Delete workflow runs

on:
  workflow_dispatch:
    inputs:
      validity-days:
        description: 'Validity days'
        default: '7'
        type: choice
        options: ['0', '1', '2', '3', '4', '5', '6', '7']

      name-pattern:
        description: 'Regular expression to match workflow name'
        required: false
        default: ''
        type: string

      dry-run:
        required: false
        default: true
        type: boolean

jobs:
  sub:
    permissions:
      actions: write

    runs-on: ubuntu-latest
    steps:
      - name: Delete workflow runs
        uses: actions/github-script@v6
        with:
          script: |
            //async function           
          
            let deleteWorkflowRun;
            if (${{ inputs.dry-run }} == true) {
              console.warn('Running in dry-run mode.');
              deleteWorkflowRun = (owner, repo, run_id) => undefined;
            } else {
              deleteWorkflowRun = github.rest.actions.deleteWorkflowRun;
            }

            const validity_days = parseInt('${{ inputs.validity-days }}', 10);
            const re = new RegExp('${{ inputs.name-pattern }}');
            const current_date = new Date();

            async function fn(workflow_id, max_pages) {
              let num_deleted_wf_runs = 0;
              try {
                let num_pages = 1;
                do {
                  const wf_runs = await github.rest.actions.listWorkflowRuns({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    workflow_id: workflow_id,
                    per_page: 30,
                    page: num_pages,
                  });
                  console.log(wf_runs.data)
                  for (const wf_run of wf_runs.data.workflow_runs) {
                    if (wf_run.status != 'completed') {
                      continue;
                    }

                    const expiry_date = new Date(wf_run.updated_at);
                    expiry_date.setDate(expiry_date.getDate() + validity_days);
                    const has_expired = current_date.getTime() > expiry_date.getTime();
                    if (!has_expired) {
                      continue;
                    }

                    deleteWorkflowRun({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      run_id: wf_run.id,
                    });
                    num_deleted_wf_runs++;
                  }
                } while(num_pages++ < max_pages);
              } catch (e) {
                console.error(e.name + ': ' + e.message);
              }
              console.debug('num_deleted_wf_runs=', num_deleted_wf_runs)
              //console.info(`[${basename}] ${num_deleted_wf_runs}/${wf_runs.data.workflow_runs.length} workflow runs have been deleted.`);
            }
            fn('lint.yml', 20);

  main:
    permissions:
      actions: write

    runs-on: ubuntu-latest
    steps:
      - name: Delete workflow runs
        uses: actions/github-script@v6
        with:
          script: |
            let deleteWorkflowRun;
            if (${{ inputs.dry-run }} == true) {
              console.warn('Running in dry-run mode.');
              deleteWorkflowRun = (owner, repo, run_id) => undefined;
            } else {
              deleteWorkflowRun = github.rest.actions.deleteWorkflowRun;
            }

            const validity_days = parseInt('${{ inputs.validity-days }}', 10);
            const re = new RegExp('${{ inputs.name-pattern }}');
            const current_date = new Date();

            const wfs = await github.rest.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            for (const wf of wfs.data.workflows) {
              const basename = wf.path.split("/").reverse()[0];
              const has_matched = re.test(basename);
              if (!has_matched) {
                continue;
              }

              let num_deleted_wf_runs = 0;
              const wf_runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: wf.id,
                per_page: 100,
              });
              for (const wf_run of wf_runs.data.workflow_runs) {
                if (wf_run.status != 'completed') {
                  continue;
                }

                const expiry_date = new Date(wf_run.updated_at);
                expiry_date.setDate(expiry_date.getDate() + validity_days);
                const has_expired = current_date.getTime() > expiry_date.getTime();
                if (!has_expired) {
                  continue;
                }

                deleteWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: wf_run.id,
                });
                num_deleted_wf_runs++;
              }
              console.info(`[${basename}] ${num_deleted_wf_runs}/${wf_runs.data.workflow_runs.length} workflow runs have been deleted.`);
            }
