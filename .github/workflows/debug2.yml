name: Caching Poetry on Windows

on: workflow_dispatch

permissions:
  contents: read

jobs:
  create-cache:
    name: caching 1/2 - ${{ matrix.os }}, ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: ['3.7', ]
        include:
          - os: windows-latest
            #poetry_path: ${USERPROFILE}\.local\bin # Errors occur.
            poetry_path: ${USERPROFILE}\.local\venv\Scripts
            poetry_cache_paths: |
              ~\.local\VERSION
              #~\.local\bin\poetry.exe # Errors occur.
              ~\.local\venv

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ${{ matrix.poetry_cache_paths }}
          key: temp-2-poetry-${{ matrix.os }}-python-${{ matrix.python-version }}

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Add Poetry to the PATH environment variable
        if: matrix.poetry_path != ''
        shell: bash
        run: |
          echo "${{ matrix.poetry_path }}" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: temp-2-venv-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Set the environment used by Poetry on Windows 1/2
        if: runner.os == 'Windows' && steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        id: py
        shell: bash
        run: |
          VER='${{ matrix.python-version }}'
          ARR=(${VER//./ })
          echo "tag=${ARR[0]}.${ARR[1]}" >> $GITHUB_OUTPUT

      - name: Set the environment used by Poetry on Windows 2/2
        if: runner.os == 'Windows' && steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        env:
          PY_PYTHON: ${{ steps.py.outputs.tag }}
        run: |
          poetry env use py

      - name: Do stuff
        run: |
          poetry run python -V

  # Same as above.
  load-cache:
    needs: create-cache
    name: caching 2/2 - ${{ matrix.os }}, ${{ matrix.python-version }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: ['3.7', ]
        include:
          - os: windows-latest
            #poetry_path: ${USERPROFILE}\.local\bin # Errors occur.
            poetry_path: ${USERPROFILE}\.local\venv\Scripts
            poetry_cache_paths: |
              ~\.local\VERSION
              #~\.local\bin\poetry.exe # Errors occur.
              ~\.local\venv

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ${{ matrix.poetry_cache_paths }}
          key: temp-2-poetry-${{ matrix.os }}-python-${{ matrix.python-version }}

      #- name: Install Poetry
      #  if: steps.cached-poetry.outputs.cache-hit != 'true'
      #  uses: snok/install-poetry@v1

      - name: Add Poetry to the PATH environment variable
        if: matrix.poetry_path != ''
        shell: bash
        run: |
          echo "${{ matrix.poetry_path }}" >> $GITHUB_PATH
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: temp-2-venv-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #- name: Set the environment used by Poetry on Windows 1/2
      #  if: runner.os == 'Windows' && steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      #  id: py
      #  shell: bash
      #  run: |
      #    VER='${{ matrix.python-version }}'
      #    ARR=(${VER//./ })
      #    echo "tag=${ARR[0]}.${ARR[1]}" >> $GITHUB_OUTPUT

      #- name: Set the environment used by Poetry on Windows 2/2
      #  if: runner.os == 'Windows' && steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      #  env:
      #    PY_PYTHON: ${{ steps.py.outputs.tag }}
      #  run: |
      #    poetry env use py

      - name: Do stuff
        run: |
          poetry run python -V
